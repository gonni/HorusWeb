GET http://localhost:8086/api/v2/config
Authorization: Token CwgQWYIZKOcSpdlxwpfZfvDWQXpsfTlt7o2GD5hFAs4rTvHDF-7cfwmIQnmdocqL__5uoabCFGuf_GYzFQfxIA==

###

# curl -i http://httpbin.org/ipcurl --request POST
#  http://localhost:8086/api/v2/query?orgID=INFLUX_ORG_ID
#  --header 'Authorization: Token INFLUX_TOKEN'
#  --header 'Accept: application/csv'
#  --header 'Content-type: application/vnd.flux'
#  --data-binary 'from(bucket:"example-bucket")
#        |> range(start: -12h)
#        |> filter(fn: (r) => r._measurement == "example-measurement")
#        |> aggregateWindow(every: 1h, fn: mean)'
POST http://localhost:8086/api/v2/query?org=xwaves
Authorization: Token CwgQWYIZKOcSpdlxwpfZfvDWQXpsfTlt7o2GD5hFAs4rTvHDF-7cfwmIQnmdocqL__5uoabCFGuf_GYzFQfxIA==
Accept: application/csv
Content-Type: application/vnd.flux

from(bucket:"tfStudySample")
|> range(start: -6h)
|> filter(fn: (r) => r._measurement == "term_tf")
|> aggregateWindow(every: 6h, fn: sum)

###
# |> sort(columns: ["_value"], desc:true)
POST http://localhost:8086/api/v2/query?org=xwaves
Authorization: Token CwgQWYIZKOcSpdlxwpfZfvDWQXpsfTlt7o2GD5hFAs4rTvHDF-7cfwmIQnmdocqL__5uoabCFGuf_GYzFQfxIA==
Accept: application/csv
Content-Type: application/vnd.flux

from(bucket:"tfStudySample")
|> range(start: -10h)
|> filter(fn: (r) => r._measurement == "term_tf" and r.term == "국민")
|> window(every: 10m)
|> sum()
|> duplicate(column: "_stop", as: "_time")
|> window(every: inf)
|> sort(columns: ["_value"], desc:true)
|> limit(n: 3)

###

POST http://localhost:8086/api/v2/query?org=xwaves
Authorization: Token CwgQWYIZKOcSpdlxwpfZfvDWQXpsfTlt7o2GD5hFAs4rTvHDF-7cfwmIQnmdocqL__5uoabCFGuf_GYzFQfxIA==
Accept: application/csv
Content-Type: application/vnd.flux

from(bucket:"tfStudySample")
|> range(start: -8h)
|> filter(fn: (r) => r._measurement == "term_tf" and r._field == "tf")
|> sum()
|> filter(fn: (r) => r._value > 500)
|> sort(columns: ["_value"])
|> limit(n: 3)

###

POST http://localhost:8086/api/v2/query?org=xwaves
Authorization: Token CwgQWYIZKOcSpdlxwpfZfvDWQXpsfTlt7o2GD5hFAs4rTvHDF-7cfwmIQnmdocqL__5uoabCFGuf_GYzFQfxIA==
Accept: application/csv
Content-Type: application/vnd.flux

from(bucket: "tfStudySample")
  |> range(start: 1660115640)
  |> filter(fn: (r) => r["_measurement"] == "term_tf")
  |> filter(fn: (r) => r["_field"] == "tf")
  |> filter(fn: (r) => r["seedId"] == "9")
  |> filter(fn: (r) => r["term"] == "비" )
  |> aggregateWindow(every: 1m, fn: sum, createEmpty: true)
  |> yield(name: "sum")

###

POST http://macmini:8086/api/v2/query?org=YG
Authorization: Token lhb_6bgvAirOy1tb4fZ1FtWGR4VbTDDb0QEXCGJsRJcHJmO4RN1SYh4_ob-lnJUOLBKX4-SFFnVkv3H_up6UWQ==
Accept: application/csv
Content-Type: application/vnd.flux

from(bucket: "tfStudySample")
  |> range(start: -1h, stop: -1m)
  |> filter(fn: (r) => r["_measurement"] == "term_tf")
  |> filter(fn: (r) => r["_field"] == "tf")
  |> filter(fn: (r) => (r["term"] == "대통령" or r["term"] == "윤" or r["term"] == "말"))
  |> aggregateWindow(every: 5m, fn: sum, createEmpty: true)
  |> yield(name: "sum")

###

POST http://macmini:8086/api/v2/query?org=YG
Authorization: Token lhb_6bgvAirOy1tb4fZ1FtWGR4VbTDDb0QEXCGJsRJcHJmO4RN1SYh4_ob-lnJUOLBKX4-SFFnVkv3H_up6UWQ==
Accept: application/csv
Content-Type: application/vnd.flux

from(bucket: "tfStudySample")
  |> range(start: -1h, stop: -1m)
  |> filter(fn: (r) => r["_measurement"] == "term_tf")
  |> filter(fn: (r) => r["_field"] == "tf")
  |> filter(fn: (r) => (r["term"] == "대통령" or r["term"] == "윤" or r["term"] == "말"))
  |> aggregateWindow(every: 5m, fn: sum, createEmpty: true)
  |> pivot(rowKey: ["_time"], columnKey: ["term"], valueColumn: "_value")

###

POST http://macmini:8086/api/v2/query?org=YG
Authorization: Token lhb_6bgvAirOy1tb4fZ1FtWGR4VbTDDb0QEXCGJsRJcHJmO4RN1SYh4_ob-lnJUOLBKX4-SFFnVkv3H_up6UWQ==
Accept: application/csv
Content-Type: application/vnd.flux

from(bucket: "tfStudySample")
  |> range(start: -1h, stop: -1m)
  |> filter(fn: (r) => r["_measurement"] == "term_tf")
  |> filter(fn: (r) => r["_field"] == "tf")
  |> filter(fn: (r) => r["term"] == "대통령")
  |> aggregateWindow(every: 5m, fn: sum, createEmpty: true)
  |> yield(name: "sum")

###

POST http://macmini:8086/api/v2/query?org=YG
Authorization: Token lhb_6bgvAirOy1tb4fZ1FtWGR4VbTDDb0QEXCGJsRJcHJmO4RN1SYh4_ob-lnJUOLBKX4-SFFnVkv3H_up6UWQ==
Accept: application/csv
Content-Type: application/vnd.flux

from(bucket: "tfStudySample")
  |> range(start: -1h, stop: -1m)
  |> filter(fn: (r) => r["_measurement"] == "term_tf")
  |> filter(fn: (r) => r["_field"] == "tf")
  |> filter(fn: (r) => (r["term"] == "대통령" or r["term"] == "윤" or r["term"] == "말"))
  |> aggregateWindow(every: 5m, fn: sum, createEmpty: true)
  |> group(columns: ["_time"], mode:"by")
  |> sum(column: "_value")

###
POST http://macmini:8086/api/v2/query?org=YG
Authorization: Token lhb_6bgvAirOy1tb4fZ1FtWGR4VbTDDb0QEXCGJsRJcHJmO4RN1SYh4_ob-lnJUOLBKX4-SFFnVkv3H_up6UWQ==
Accept: application/csv
Content-Type: application/vnd.flux

from(bucket: "tfStudySample")
  |> range(start: -1h, stop: -1m)
  |> filter(fn: (r) => r["_measurement"] == "term_tf")
  |> filter(fn: (r) => r["_field"] == "tf")
  |> filter(fn: (r) => (r["term"] == "대통령" or r["term"] == "윤" or r["term"] == "말"))
  |> aggregateWindow(every: 5m, fn: sum, createEmpty: true)
  |> group(columns: ["_time"], mode:"by")
  |> sum(column: "_value")